package gw.specContrib.expressions.cast.generics

class Errant_TypeParamExtendingFinal {

  class Box<T> {}

  class A123 {}
  class B123 {}
  class ABC<T1 extends A123, T2 extends B123> {
    function foo() {
      var a111: Box<T1>
      var b111 = a111 as Box<T2>            //## issuekeys: INCONVERTIBLE TYPES; CANNOT CAST 'GW.SPECCONTRIB.AAA.PARSERVSOPENSOURCE.GENERICS.GENERICSASSIGNMENT.PUSHEDCLASSES.ERRANT_TYPEPARAMEXTENDING2.BOX<T1>' TO 'GW.SPECCONTRIB.AAA.PARSERVSOPENSOURCE.GENERICS.GENERICSASSIGNMENT.PUSHEDCLASSES.ERRANT_TYPEPARAMEXTENDING2.BOX<T2>'

      var a222: Box<T2>
      var b222 = a222 as Box<T1>            //## issuekeys: INCONVERTIBLE TYPES; CANNOT CAST 'GW.SPECCONTRIB.AAA.PARSERVSOPENSOURCE.GENERICS.GENERICSASSIGNMENT.PUSHEDCLASSES.ERRANT_TYPEPARAMEXTENDING2.BOX<T2>' TO 'GW.SPECCONTRIB.AAA.PARSERVSOPENSOURCE.GENERICS.GENERICSASSIGNMENT.PUSHEDCLASSES.ERRANT_TYPEPARAMEXTENDING2.BOX<T1>'
    }
  }

  final class F123 {}
  interface I123 {}
  class FI <T3 extends F123, T4 extends I123> {
    function bar() {
      var f111: Box<T3>
      var i111 = f111 as Box<T4>            //## issuekeys: INCONVERTIBLE TYPES; CANNOT CAST 'GW.SPECCONTRIB.AAA.PARSERVSOPENSOURCE.GENERICS.GENERICSASSIGNMENT.PUSHEDCLASSES.ERRANT_TYPEPARAMEXTENDING2.BOX<T3>' TO 'GW.SPECCONTRIB.AAA.PARSERVSOPENSOURCE.GENERICS.GENERICSASSIGNMENT.PUSHEDCLASSES.ERRANT_TYPEPARAMEXTENDING2.BOX<T4>'

      var f222: Box<T4>
      var i222 = f222 as Box<T3>            //## issuekeys: INCONVERTIBLE TYPES; CANNOT CAST 'GW.SPECCONTRIB.AAA.PARSERVSOPENSOURCE.GENERICS.GENERICSASSIGNMENT.PUSHEDCLASSES.ERRANT_TYPEPARAMEXTENDING2.BOX<T4>' TO 'GW.SPECCONTRIB.AAA.PARSERVSOPENSOURCE.GENERICS.GENERICSASSIGNMENT.PUSHEDCLASSES.ERRANT_TYPEPARAMEXTENDING2.BOX<T3>'
    }
  }

  class F456 {}
  interface I456 {}
  class FI22 <T5 extends F456, T6 extends I456> {
    function bar() {
      var f444: Box<T5>
      var i444 = f444 as Box<T6>

      var f555: Box<T5>
      var i666 = f555 as Box<T6>
    }
  }
}